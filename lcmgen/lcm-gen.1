.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH LCM-GEN "1" "November 2024" "lcm-gen 1.5.0" "Lightweight Communications and Marshalling (LCM)"
.SH NAME
lcm-gen \- a tool for generating serialization code
.SH SYNOPSIS
.TP 5
\fBlcm-gen \fI[options]\fR \fIFILE\fR...
.SH DESCRIPTION
.PP
\fBlcm-gen\fR is the Lightweight Communications and Marshalling code generation
utility.  It takes as input one or more \fB.lcm\fR files containing LCM message
type definitions, and generates language-specific bindings for marshalling and
unmarshalling messages of the specified types.

Currently, \fBlcm-gen\fR is capable of generating language bindings for C, C++,
Java, Python, Lua, and C#.
.TP
\fB\-h\fR | \fB\-\-help\fR
[ true ]                            Show this help
.TP
\fB\-t\fR | \fB\-\-tokenize\fR
[ false ]                           Show tokenization
.TP
\fB\-d\fR | \fB\-\-debug\fR
[ false ]                           Show parsed file
.TP
\fB\-\-lazy\fR
[ false ]                           Generate output file only if .lcm is newer
.TP
\fB\-\-use\-quotes\-for\-includes\fR
[ false ]                           Use quotes instead of angular brackets for including header files
.TP
\fB\-\-package\-prefix\fR
[  ]                                Add this package name as a prefix to the declared package
.TP
\fB\-\-version\fR
[ false ]                           Show version information and exit
.PP
C OPTIONS
.TP
\fB\-c\fR | \fB\-\-c\fR
[ false ]                           Emit C code
.TP
\fB\-\-c\-cpath\fR
[ . ]                               Location for .c files
.TP
\fB\-\-c\-hpath\fR
[ . ]                               Location for .h files
.TP
\fB\-\-c\-export\-include\fR
[  ]                                #include that provides the export symbol
.TP
\fB\-\-c\-export\-symbol\fR
[  ]                                ABI export decoration symbol
.TP
\fB\-\-cinclude\fR
[  ]                                Generated #include lines reference this folder
.TP
\fB\-\-c\-no\-pubsub\fR
[ false ]                           Do not generate _publish and _subscribe functions
.TP
\fB\-\-c\-typeinfo\fR
[ false ]                           Generate typeinfo functions for each type
.PP
C++ OPTIONS
.TP
\fB\-x\fR | \fB\-\-cpp\fR
[ false ]                           Emit C++ code
.TP
\fB\-\-cpp\-std\fR
[ c++98 ]                           C++ standard(c++98, c++11)
.TP
\fB\-\-cpp\-hpath\fR
[ . ]                               Location for .hpp files
.TP
\fB\-\-cpp\-include\fR
[  ]                                Generated #include lines reference this folder
.PP
Java OPTIONS
.TP
\fB\-j\fR | \fB\-\-java\fR
[ false ]                           Emit Java code
.TP
\fB\-\-jpath\fR
[  ]                                Java file destination directory
.TP
\fB\-\-jmkdir\fR
[ true ]                            Make java source directories automatically
.TP
\fB\-\-jdecl\fR
[ implements lcm.lcm.LCMEncodable ] String added to class declarations
.TP
\fB\-\-jdefaultpkg\fR
[ lcmtypes ]                        Default Java package if LCM type has no package
.PP
Python OPTIONS
.TP
\fB\-p\fR | \fB\-\-python\fR
[ false ]                           Emit Python code
.TP
\fB\-\-ppath\fR
[  ]                                Python destination directory
.TP
\fB\-\-python\-no\-init\fR
[ false ]                           Do not create __init__.py
.PP
Lua OPTIONS
.TP
\fB\-l\fR | \fB\-\-lua\fR
[ false ]                           Emit Lua code
.TP
\fB\-\-lpath\fR
[  ]                                Lua destination directory
.TP
\fB\-\-lua\-no\-init\fR
[ false ]                           Do not create init.lua
.PP
C#.NET OPTIONS
.TP
\fB\-\-csharp\fR
[ false ]                           Emit C#.NET code
.TP
\fB\-\-csharp\-path\fR
[  ]                                C#.NET file destination directory
.TP
\fB\-\-csharp\-mkdir\fR
[ true ]                            Make C#.NET source directories automatically
.TP
\fB\-\-csharp\-strip\-dirs\fR
[ false ]                           Do not generate folders for default and root namespace
.TP
\fB\-\-csharp\-decl\fR
[ : LCM.LCM.LCMEncodable ]          String added to class declarations
.TP
\fB\-\-csharp\-root\-nsp\fR
[  ]                                Root C#.NET namespace (wrapper) added before LCM package
.TP
\fB\-\-csharp\-default\-nsp\fR
[ LCMTypes ]                        Default C#.NET namespace if LCM type has no package
.PP
Go OPTIONS
.TP
\fB\-g\fR | \fB\-\-go\fR
[ false ]                           Emit Go code
.TP
\fB\-\-go\-path\fR
[ . ]                               Location for .go files
.TP
\fB\-\-go\-mkdir\fR
[ true ]                            Create parent directories as needed
.TP
\fB\-\-go\-tag\-name\fR
[  ]                                Give the struct member tag the a name (e.g. json for `json:"tag"`)
.TP
\fB\-\-go\-strip\-dirs\fR
[ false ]                           Do not generate directories for Go packages
.TP
\fB\-\-go\-fingerprint\fR
[ false ]                           Add fingerprint as suffix to filenames and types, fingerprint is pre\-calculate to const
.TP
\fB\-\-go\-no\-overwrite\fR
[ false ]                           Do not overwrite an existing target file, skip and log
.TP
\fB\-\-go\-emit\-gopacket\fR
[ false ]                           Emit gopacket API
.TP
\fB\-\-go\-import\-prefix\fR
[  ]                                Add this package prefix to all LCM type import statements
.TP
\fB\-\-go\-default\-package\fR
[ lcmtypes ]                        Default Go package if LCM type has no package
.SH COPYRIGHT

lcm-gen is part of the Lightweight Communications and Marshalling (LCM) project.
Permission is granted to copy, distribute and/or modify it under the terms of
the GNU Lesser General Public License as published by the Free Software
Foundation; either version 2.1 of the License, or (at your option) any later
version.  See the file COPYING in the LCM distribution for more details
regarding distribution.

LCM is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.
You should have received a copy of the GNU Lesser General Public
License along with LCM; if not, write to the Free Software Foundation, Inc., 51
Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
