name: Build wheels

on: [push, pull_request]

jobs:
  unix:
    name: ${{ matrix.os }} | ${{ matrix.arch }} | ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-24.04, ubuntu-24.04-arm, macos-13, macos-14]
        arch: [auto, armv7l]
        python: [cp37-*, cp38-*, cp39-*, cp310-*, cp311-*, cp312-*, cp313-*]
        include:
          - os: macos-13
            macos_deployment_target: 13
          - os: macos-14
            macos_deployment_target: 14
        exclude:
          - os: ubuntu-24.04
            arch: armv7l
          - os: macos-13
            arch: armv7l
          - os: macos-13
            python: cp37-*
          - os: macos-13
            python: cp310-*
          - os: macos-14
            arch: armv7l
          - os: macos-14
            python: cp37-*

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.macos_deployment_target }}
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.python }}
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  windows-msys:

    runs-on: windows-2022

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: false
          install: >-
            git
            make
          pacboy: >-
            toolchain:p
            cmake:p
            glib2:p
            python-pip:p

      - name: Build wheel
        run: pip3 wheel -v .

      - name: Test wheel
        run: |
          pip3 install lcm*.whl --break-system-packages
          python test/python/test_python_module.py

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: windows-wheel
          path: '*.whl'

  windows-msvc:
    name: windows | auto | ${{ matrix.python }}
    runs-on: windows-2022
    env:
      VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}\vcpkg-cache
    strategy:
      fail-fast: false
      matrix:
        python: [cp37-*, cp38-*, cp39-*, cp310-*, cp311-*, cp312-*, cp313-*]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ${{github.workspace}}\vcpkg-cache
          key: ${{ hashFiles('vcpkg.json') }}-vcpkg-wheel-cache
          restore-keys: vcpkg-wheel-cache

      - name: Create cache directory
        run: mkdir ${{env.VCPKG_DEFAULT_BINARY_CACHE}} -Force

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.0
        env:
          CIBW_BUILD: ${{ matrix.python }}
          SKBUILD_CMAKE_ARGS: "--preset=vcpkg-vs-github"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-windows-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
